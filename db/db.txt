CREATE DATABASE ta;
USE ta;

-- Tabla de roles
CREATE TABLE roles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre_rol VARCHAR(50) NOT NULL UNIQUE
);


CREATE TABLE usuarios (
  id int(11) AUTO_INCREMENT PRIMARY KEY,
  nombre varchar(100) NOT NULL,
  correo varchar(100) NOT NULL,
  contraseña varchar(255) NOT NULL,
  rol enum('admin','usuario') NOT NULL,
  activo tinyint(1) DEFAULT 1,
  creado_en timestamp NOT NULL DEFAULT current_timestamp()
);

-- Tabla de lugares turísticos
CREATE TABLE lugares_turisticos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    ubicacion VARCHAR(255)
);

-- Tabla de hoteles
CREATE TABLE hoteles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    lugar_id INT NOT NULL,
    direccion VARCHAR(255) NOT NULL,
    telefono VARCHAR(20),
    estrellas INT CHECK (estrellas BETWEEN 1 AND 5),
    FOREIGN KEY (lugar_id) REFERENCES lugares_turisticos(id)
);

-- Tabla de tipos de habitación
CREATE TABLE tipos_habitacion (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    capacidad INT NOT NULL CHECK (capacidad > 0),
    camas INT NOT NULL CHECK (camas > 0)
);

-- Tabla de habitaciones
CREATE TABLE habitaciones (
    id INT AUTO_INCREMENT PRIMARY KEY,
    hotel_id INT NOT NULL,
    tipo_habitacion_id INT NOT NULL,
    numero_habitacion VARCHAR(10) NOT NULL,
    precio DECIMAL(10,2) NOT NULL CHECK (precio >= 0),
    disponibilidad INT NOT NULL CHECK (disponibilidad >= 0),
    FOREIGN KEY (hotel_id) REFERENCES hoteles(id),
    FOREIGN KEY (tipo_habitacion_id) REFERENCES tipos_habitacion(id),
    UNIQUE(hotel_id, numero_habitacion) -- Para evitar habitaciones duplicadas en un mismo hotel
);

-- Tabla de reservaciones
CREATE TABLE reservaciones (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    habitacion_id INT NOT NULL,
    fecha_inicio DATETIME NOT NULL,
    fecha_fin DATETIME NOT NULL,
    total_personas INT NOT NULL CHECK (total_personas > 0),
    estado ENUM('pendiente', 'confirmada', 'cancelada') DEFAULT 'pendiente',
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (habitacion_id) REFERENCES habitaciones(id)
);

-- Tabla de reseñas y comentarios
CREATE TABLE reseñas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    hotel_id INT NOT NULL,
    calificacion INT CHECK (calificacion BETWEEN 1 AND 5),
    comentario TEXT,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (hotel_id) REFERENCES hoteles(id)
);

